create database FitnessApp
use FitnessApp


create table users (
    user_id int auto_increment primary key,
    name varchar(100),
    email varchar(100) unique,
    password varchar(100),
    age int,
    gender varchar(10),
    height decimal(5,2),
    weight decimal(5,2),
    goal varchar(100)
);


create table trainers (
    trainer_id int auto_increment primary key,
    name varchar(100),
    contact varchar(100),
    specialization varchar(100)
);


create table workouts (
    workout_id int auto_increment primary key,
    workout_name varchar(100),
    trainer_id int,
    foreign key (trainer_id) references trainers(trainer_id)
);


create table user_workouts (
    user_workout_id int auto_increment primary key,
    user_id int,
    workout_id int,
    date_assigned date,
    foreign key (user_id) references users(user_id),
    foreign key (workout_id) references workouts(workout_id)
);


create table diet_plans (
    diet_id int auto_increment primary key,
    name varchar(100),
    description text,
    calories int
);


create table user_diet (
    user_diet_id int auto_increment primary key,
    user_id int,
    diet_id int,
    start_date date,
    end_date date,
    foreign key (user_id) references users(user_id),
    foreign key (diet_id) references diet_plans(diet_id)
);


create table progress_tracking (
    progress_id int auto_increment primary key,
    user_id int,
    weight decimal(5,2),
    body_fat_percentage decimal(5,2),
    date_logged date,
    foreign key (user_id) references users(user_id)
);


create table payments (
    payment_id int auto_increment primary key,
    user_id int,
    amount decimal(10,2),
    payment_date date,
    payment_method varchar(50),
    foreign key (user_id) references users(user_id)
);


insert into users (name, email, password, age, gender, height, weight, goal) values
('john doe', 'john@example.com', 'pass123', 28, 'male', 180.0, 80.5, 'lose weight'),
('jane smith', 'jane@example.com', 'secure456', 32, 'female', 165.0, 68.0, 'build muscle');

insert into trainers (name, contact, specialization) values
('mike trainer', 'mike@fitness.com', 'cardio'),
('sarah coach', 'sarah@fitness.com', 'strength training');

insert into workouts (workout_name, trainer_id) values
('cardio blast', 1),
('weight lifting', 2),
('hiit routine', 1);

insert into user_workouts (user_id, workout_id, date_assigned) values
(1, 1, '2024-01-10'),
(1, 2, '2024-01-12'),
(2, 3, '2024-02-01');

insert into diet_plans (name, description, calories) values
('keto diet', 'high fat, low carb', 2000),
('intermittent fasting', '16/8 fasting method', 1800),
('balanced diet', 'balanced carbs, proteins, and fats', 2200);

insert into user_diet (user_id, diet_id, start_date, end_date) values
(1, 1, '2024-01-01', '2024-01-31'),
(2, 2, '2024-02-01', '2024-02-28');

insert into progress_tracking (user_id, weight, body_fat_percentage, date_logged) values
(1, 80.5, 22.5, '2024-01-15'),
(1, 78.0, 21.0, '2024-02-15'),
(2, 68.0, 25.0, '2024-02-10');

insert into payments (user_id, amount, payment_date, payment_method) values
(1, 49.99, '2024-01-01', 'credit card'),
(2, 59.99, '2024-02-01', 'paypal');


-- select users.* , user_workouts.* from users inner join user_workouts 
-- on users.user_id=user_workouts.

select users.name, workouts.workout_name 
from users 
inner join user_workouts on users.user_id = user_workouts.user_id 
inner join workouts on user_workouts.workout_id = workouts.workout_id;

select users.name, diet_plans.name, diet_plans.calories 
from users 
inner join user_diet on users.user_id = user_diet.user_id 
inner join diet_plans on user_diet.diet_id = diet_plans.diet_id;

select users.name, progress_tracking.weight, payments.amount 
from users 
left join progress_tracking on users.user_id = progress_tracking.user_id 
left join payments on users.user_id = payments.user_id;


update users 
set age = 22
where user_id = 2
